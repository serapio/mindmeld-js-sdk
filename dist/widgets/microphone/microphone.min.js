!function(n){"use strict";function t(){r=n.listener=new n.Listener({interimResults:!0}),r.on("result",function(n,t,e,o){c.emit("result",n,t,e,o)}),r.on("start",function(n){c.emit("start",n)}),r.on("end",function(n){c.emit("end",n)}),r.on("error",function(n){c.emit("error",n)})}function e(){var n=u.querySelector(".volume-pulser");s=new window.VolumeMonitor({listener:r,onVolumeChange:function(t){var e=t/100*.5+1;n.style.transform="scale("+e+")"},onStop:function(){n.style.transform="scale(0.9)"},onError:function(n){c.emit("error",n)}})}function o(){function n(){r.listening?c.stop():o=setTimeout(function(){c.start(!0),o=null},i)}function t(){null!==o&&(clearTimeout(o),o=null,c.start())}function e(){clearTimeout(o),o=null}var o=null,i=1e3,s=u.querySelector(".icon-container");s.addEventListener("mousedown",n),s.addEventListener("touchstart",function(t){t.stopPropagation(),t.preventDefault(),n()}),s.addEventListener("mouseup",t),s.addEventListener("touchend",function(n){n.stopPropagation(),n.preventDefault(),t()}),s.addEventListener("mouseout",e),s.addEventListener("touchleave",function(n){n.stopPropagation(),n.preventDefault(),e()})}function i(){c.on("start",function(){u.classList.add("listening"),r.continuous&&u.classList.add("lock")}),c.on("end",function(){u.classList.remove("listening"),u.classList.remove("lock")})}var r,s,u,c=window.MindMeldMicrophone=window.MindMeldMicrophone||{};c.initialize=function(r){if(u=r,!n.support.speechRecognition){u.classList.add("disabled");var s="This browser does not support speech recognition";return void c.emit("error",s)}t(),e(),o(),i(),c.emit("init")},c.start=function(n){r.continuous=n,r.start(),s.start()},c.listening=function(){return r.listening},c.stop=function(){r.stop()};var a={};c.on=function(n,t,e){a[n]||(a[n]=[]);var o={callback:t,context:e};a[n].push(o)},c.emit=function(n){var t=a[n];if(void 0!==t){var e=Array.prototype.slice.call(arguments,1);t.forEach(function(n){var t=n.context||this;n.callback.apply(t,e)})}}}(MM);
//# sourceMappingURL=microphone.js
//# sourceMappingURL=microphone.min.js.map